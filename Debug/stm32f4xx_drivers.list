
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000794  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000958  08000960  00010960  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000958  08000958  00010960  2**0
                  CONTENTS
  4 .ARM          00000000  08000958  08000958  00010960  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000958  08000960  00010960  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000958  08000958  00010958  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800095c  0800095c  0001095c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010960  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000960  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000960  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010960  2**0
                  CONTENTS, READONLY
 12 .debug_info   000011c5  00000000  00000000  0001098a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000347  00000000  00000000  00011b4f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00011e98  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  00011f60  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000271e  00000000  00000000  00012000  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000d23  00000000  00000000  0001471e  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000b89c  00000000  00000000  00015441  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00020cdd  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000284  00000000  00000000  00020d58  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000940 	.word	0x08000940

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000940 	.word	0x08000940

08000204 <ConfigPeripherals>:
#include <string.h>

#define BTN_PRESS LOW


void ConfigPeripherals(GPIO_Handle_t* GpioLed,GPIO_Handle_t* GpioButton){
 8000204:	b580      	push	{r7, lr}
 8000206:	b082      	sub	sp, #8
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
 800020c:	6039      	str	r1, [r7, #0]

		GpioLed->pGPIOx  									= 	GPIOA;
 800020e:	687b      	ldr	r3, [r7, #4]
 8000210:	4a1c      	ldr	r2, [pc, #112]	; (8000284 <ConfigPeripherals+0x80>)
 8000212:	601a      	str	r2, [r3, #0]
		GpioLed->GPIO_PinConfig.GPIO_PinNumber 				= 	GPIO_PIN_NO_9;
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	2209      	movs	r2, #9
 8000218:	711a      	strb	r2, [r3, #4]
		GpioLed->GPIO_PinConfig.GPIO_PinMode 				= 	GPIO_MODE_OUTPUT;
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	2201      	movs	r2, #1
 800021e:	715a      	strb	r2, [r3, #5]
		GpioLed->GPIO_PinConfig.GPIO_PinSpeed 				= 	GPIO_SPEED_FAST ;
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	2202      	movs	r2, #2
 8000224:	719a      	strb	r2, [r3, #6]
		GpioLed->GPIO_PinConfig.GPIO_PinOPType 				= 	GPIO_OP_TYPE_PP;
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	2200      	movs	r2, #0
 800022a:	721a      	strb	r2, [r3, #8]
		GpioLed->GPIO_PinConfig.GPIO_PinPuPdControl			= 	GPIO_NO_PUPD;
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	2200      	movs	r2, #0
 8000230:	71da      	strb	r2, [r3, #7]

		GPIO_PeriClockControl(GPIOA,ENABLE);
 8000232:	2101      	movs	r1, #1
 8000234:	4813      	ldr	r0, [pc, #76]	; (8000284 <ConfigPeripherals+0x80>)
 8000236:	f000 f879 	bl	800032c <GPIO_PeriClockControl>
		GPIO_Init(GpioLed);
 800023a:	6878      	ldr	r0, [r7, #4]
 800023c:	f000 f8e0 	bl	8000400 <GPIO_Init>

		GpioButton->pGPIOx 									=	GPIO_USER_BUTTON;
 8000240:	683b      	ldr	r3, [r7, #0]
 8000242:	4a11      	ldr	r2, [pc, #68]	; (8000288 <ConfigPeripherals+0x84>)
 8000244:	601a      	str	r2, [r3, #0]
		GpioButton->GPIO_PinConfig.GPIO_PinNumber 			= 	BUTTON_USER_NUCLEO;
 8000246:	683b      	ldr	r3, [r7, #0]
 8000248:	220d      	movs	r2, #13
 800024a:	711a      	strb	r2, [r3, #4]
		GpioButton->GPIO_PinConfig.GPIO_PinMode 			= 	GPIO_MODE_IT_FT;
 800024c:	683b      	ldr	r3, [r7, #0]
 800024e:	2204      	movs	r2, #4
 8000250:	715a      	strb	r2, [r3, #5]
		GpioButton->GPIO_PinConfig.GPIO_PinSpeed 			= 	GPIO_SPEED_FAST;
 8000252:	683b      	ldr	r3, [r7, #0]
 8000254:	2202      	movs	r2, #2
 8000256:	719a      	strb	r2, [r3, #6]
		GpioButton->GPIO_PinConfig.GPIO_PinPuPdControl		= 	GPIO_PIN_PU;
 8000258:	683b      	ldr	r3, [r7, #0]
 800025a:	2201      	movs	r2, #1
 800025c:	71da      	strb	r2, [r3, #7]

		GPIO_PeriClockControl(GPIO_USER_BUTTON,ENABLE);
 800025e:	2101      	movs	r1, #1
 8000260:	4809      	ldr	r0, [pc, #36]	; (8000288 <ConfigPeripherals+0x84>)
 8000262:	f000 f863 	bl	800032c <GPIO_PeriClockControl>
		GPIO_Init(GpioButton);
 8000266:	6838      	ldr	r0, [r7, #0]
 8000268:	f000 f8ca 	bl	8000400 <GPIO_Init>

		//IRQ configurations
		GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10,NVIC_IRQ_PRI15);
 800026c:	210f      	movs	r1, #15
 800026e:	2028      	movs	r0, #40	; 0x28
 8000270:	f000 faf0 	bl	8000854 <GPIO_IRQPriorityConfig>
		GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10,ENABLE);
 8000274:	2101      	movs	r1, #1
 8000276:	2028      	movs	r0, #40	; 0x28
 8000278:	f000 fa6a 	bl	8000750 <GPIO_IRQInterruptConfig>

}
 800027c:	bf00      	nop
 800027e:	3708      	adds	r7, #8
 8000280:	46bd      	mov	sp, r7
 8000282:	bd80      	pop	{r7, pc}
 8000284:	40020000 	.word	0x40020000
 8000288:	40020800 	.word	0x40020800

0800028c <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void){
 800028c:	b580      	push	{r7, lr}
 800028e:	af00      	add	r7, sp, #0

	GPIO_IRQHandling(BUTTON_USER_NUCLEO); //Clear the pending event from EXTI line.
 8000290:	200d      	movs	r0, #13
 8000292:	f000 fb09 	bl	80008a8 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOA,GPIO_PIN_NO_9);
 8000296:	2109      	movs	r1, #9
 8000298:	4802      	ldr	r0, [pc, #8]	; (80002a4 <EXTI15_10_IRQHandler+0x18>)
 800029a:	f000 fa45 	bl	8000728 <GPIO_ToggleOutputPin>
}
 800029e:	bf00      	nop
 80002a0:	bd80      	pop	{r7, pc}
 80002a2:	bf00      	nop
 80002a4:	40020000 	.word	0x40020000

080002a8 <main>:

int main(void){
 80002a8:	b580      	push	{r7, lr}
 80002aa:	b086      	sub	sp, #24
 80002ac:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed,GpioButton;

	memset(&GpioLed,0,sizeof(GpioLed));
 80002ae:	f107 030c 	add.w	r3, r7, #12
 80002b2:	220c      	movs	r2, #12
 80002b4:	2100      	movs	r1, #0
 80002b6:	4618      	mov	r0, r3
 80002b8:	f000 fb3a 	bl	8000930 <memset>
	memset(&GpioButton,0,sizeof(GpioButton));
 80002bc:	463b      	mov	r3, r7
 80002be:	220c      	movs	r2, #12
 80002c0:	2100      	movs	r1, #0
 80002c2:	4618      	mov	r0, r3
 80002c4:	f000 fb34 	bl	8000930 <memset>

	ConfigPeripherals(&GpioLed, &GpioButton);
 80002c8:	463a      	mov	r2, r7
 80002ca:	f107 030c 	add.w	r3, r7, #12
 80002ce:	4611      	mov	r1, r2
 80002d0:	4618      	mov	r0, r3
 80002d2:	f7ff ff97 	bl	8000204 <ConfigPeripherals>

	while(1);
 80002d6:	e7fe      	b.n	80002d6 <main+0x2e>

080002d8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002d8:	480d      	ldr	r0, [pc, #52]	; (8000310 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002da:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002dc:	480d      	ldr	r0, [pc, #52]	; (8000314 <LoopForever+0x6>)
  ldr r1, =_edata
 80002de:	490e      	ldr	r1, [pc, #56]	; (8000318 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002e0:	4a0e      	ldr	r2, [pc, #56]	; (800031c <LoopForever+0xe>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002e4:	e002      	b.n	80002ec <LoopCopyDataInit>

080002e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ea:	3304      	adds	r3, #4

080002ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002f0:	d3f9      	bcc.n	80002e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002f2:	4a0b      	ldr	r2, [pc, #44]	; (8000320 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002f4:	4c0b      	ldr	r4, [pc, #44]	; (8000324 <LoopForever+0x16>)
  movs r3, #0
 80002f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002f8:	e001      	b.n	80002fe <LoopFillZerobss>

080002fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002fc:	3204      	adds	r2, #4

080002fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000300:	d3fb      	bcc.n	80002fa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000302:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000306:	f000 faef 	bl	80008e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800030a:	f7ff ffcd 	bl	80002a8 <main>

0800030e <LoopForever>:

LoopForever:
    b LoopForever
 800030e:	e7fe      	b.n	800030e <LoopForever>
  ldr   r0, =_estack
 8000310:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000314:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000318:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800031c:	08000960 	.word	0x08000960
  ldr r2, =_sbss
 8000320:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000324:	2000001c 	.word	0x2000001c

08000328 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000328:	e7fe      	b.n	8000328 <ADC_IRQHandler>
	...

0800032c <GPIO_PeriClockControl>:
 *
 * @Note		- none

 ************************************************************/

void GPIO_PeriClockControl(GPIO_RegDef_t* pGPIOx,uint8_t Enable){
 800032c:	b480      	push	{r7}
 800032e:	b083      	sub	sp, #12
 8000330:	af00      	add	r7, sp, #0
 8000332:	6078      	str	r0, [r7, #4]
 8000334:	460b      	mov	r3, r1
 8000336:	70fb      	strb	r3, [r7, #3]

	if(Enable==ENABLE){
 8000338:	78fb      	ldrb	r3, [r7, #3]
 800033a:	2b01      	cmp	r3, #1
 800033c:	d14b      	bne.n	80003d6 <GPIO_PeriClockControl+0xaa>

		if(pGPIOx == GPIOA)				GPIOA_PCLCK_ENABLE();
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a27      	ldr	r2, [pc, #156]	; (80003e0 <GPIO_PeriClockControl+0xb4>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d106      	bne.n	8000354 <GPIO_PeriClockControl+0x28>
 8000346:	4b27      	ldr	r3, [pc, #156]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 8000348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034a:	4a26      	ldr	r2, [pc, #152]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 800034c:	f043 0301 	orr.w	r3, r3, #1
 8000350:	6313      	str	r3, [r2, #48]	; 0x30
		else if (pGPIOx == GPIOH)		GPIOH_PCLCK_ENABLE();
	}
	else{

	}
}
 8000352:	e040      	b.n	80003d6 <GPIO_PeriClockControl+0xaa>
		else if (pGPIOx == GPIOB)		GPIOB_PCLCK_ENABLE();
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	4a24      	ldr	r2, [pc, #144]	; (80003e8 <GPIO_PeriClockControl+0xbc>)
 8000358:	4293      	cmp	r3, r2
 800035a:	d106      	bne.n	800036a <GPIO_PeriClockControl+0x3e>
 800035c:	4b21      	ldr	r3, [pc, #132]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 800035e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000360:	4a20      	ldr	r2, [pc, #128]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 8000362:	f043 0302 	orr.w	r3, r3, #2
 8000366:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000368:	e035      	b.n	80003d6 <GPIO_PeriClockControl+0xaa>
		else if (pGPIOx == GPIOC)		GPIOC_PCLCK_ENABLE();
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	4a1f      	ldr	r2, [pc, #124]	; (80003ec <GPIO_PeriClockControl+0xc0>)
 800036e:	4293      	cmp	r3, r2
 8000370:	d106      	bne.n	8000380 <GPIO_PeriClockControl+0x54>
 8000372:	4b1c      	ldr	r3, [pc, #112]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 8000374:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000376:	4a1b      	ldr	r2, [pc, #108]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 8000378:	f043 0304 	orr.w	r3, r3, #4
 800037c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037e:	e02a      	b.n	80003d6 <GPIO_PeriClockControl+0xaa>
		else if (pGPIOx == GPIOD)		GPIOD_PCLCK_ENABLE();
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	4a1b      	ldr	r2, [pc, #108]	; (80003f0 <GPIO_PeriClockControl+0xc4>)
 8000384:	4293      	cmp	r3, r2
 8000386:	d106      	bne.n	8000396 <GPIO_PeriClockControl+0x6a>
 8000388:	4b16      	ldr	r3, [pc, #88]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 800038a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038c:	4a15      	ldr	r2, [pc, #84]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 800038e:	f043 0308 	orr.w	r3, r3, #8
 8000392:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000394:	e01f      	b.n	80003d6 <GPIO_PeriClockControl+0xaa>
		else if (pGPIOx == GPIOE)		GPIOE_PCLCK_ENABLE();
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	4a16      	ldr	r2, [pc, #88]	; (80003f4 <GPIO_PeriClockControl+0xc8>)
 800039a:	4293      	cmp	r3, r2
 800039c:	d106      	bne.n	80003ac <GPIO_PeriClockControl+0x80>
 800039e:	4b11      	ldr	r3, [pc, #68]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 80003a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a2:	4a10      	ldr	r2, [pc, #64]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 80003a4:	f043 0310 	orr.w	r3, r3, #16
 80003a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003aa:	e014      	b.n	80003d6 <GPIO_PeriClockControl+0xaa>
		else if (pGPIOx == GPIOF)		GPIOF_PCLCK_ENABLE();
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	4a12      	ldr	r2, [pc, #72]	; (80003f8 <GPIO_PeriClockControl+0xcc>)
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d106      	bne.n	80003c2 <GPIO_PeriClockControl+0x96>
 80003b4:	4b0b      	ldr	r3, [pc, #44]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 80003b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b8:	4a0a      	ldr	r2, [pc, #40]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 80003ba:	f043 0320 	orr.w	r3, r3, #32
 80003be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c0:	e009      	b.n	80003d6 <GPIO_PeriClockControl+0xaa>
		else if (pGPIOx == GPIOH)		GPIOH_PCLCK_ENABLE();
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4a0d      	ldr	r2, [pc, #52]	; (80003fc <GPIO_PeriClockControl+0xd0>)
 80003c6:	4293      	cmp	r3, r2
 80003c8:	d105      	bne.n	80003d6 <GPIO_PeriClockControl+0xaa>
 80003ca:	4b06      	ldr	r3, [pc, #24]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 80003cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ce:	4a05      	ldr	r2, [pc, #20]	; (80003e4 <GPIO_PeriClockControl+0xb8>)
 80003d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d6:	bf00      	nop
 80003d8:	370c      	adds	r7, #12
 80003da:	46bd      	mov	sp, r7
 80003dc:	bc80      	pop	{r7}
 80003de:	4770      	bx	lr
 80003e0:	40020000 	.word	0x40020000
 80003e4:	40023800 	.word	0x40023800
 80003e8:	40020400 	.word	0x40020400
 80003ec:	40020800 	.word	0x40020800
 80003f0:	40020c00 	.word	0x40020c00
 80003f4:	40021000 	.word	0x40021000
 80003f8:	40021400 	.word	0x40021400
 80003fc:	40021c00 	.word	0x40021c00

08000400 <GPIO_Init>:
 *
 * @Note		-

 ************************************************************/

void GPIO_Init(GPIO_Handle_t* pGPIOHandle){
 8000400:	b480      	push	{r7}
 8000402:	b089      	sub	sp, #36	; 0x24
 8000404:	af00      	add	r7, sp, #0
 8000406:	6078      	str	r0, [r7, #4]

	uint32_t temp=0;
 8000408:	2300      	movs	r3, #0
 800040a:	61fb      	str	r3, [r7, #28]
	//Configure the mode

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG ){
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	795b      	ldrb	r3, [r3, #5]
 8000410:	2b03      	cmp	r3, #3
 8000412:	d81f      	bhi.n	8000454 <GPIO_Init+0x54>

		//the none interrupt mode
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	795b      	ldrb	r3, [r3, #5]
 8000418:	461a      	mov	r2, r3
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	791b      	ldrb	r3, [r3, #4]
 800041e:	005b      	lsls	r3, r3, #1
 8000420:	fa02 f303 	lsl.w	r3, r2, r3
 8000424:	61fb      	str	r3, [r7, #28]

		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	681a      	ldr	r2, [r3, #0]
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	791b      	ldrb	r3, [r3, #4]
 8000430:	4619      	mov	r1, r3
 8000432:	2303      	movs	r3, #3
 8000434:	408b      	lsls	r3, r1
 8000436:	43db      	mvns	r3, r3
 8000438:	4619      	mov	r1, r3
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	400a      	ands	r2, r1
 8000440:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	6819      	ldr	r1, [r3, #0]
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	69fa      	ldr	r2, [r7, #28]
 800044e:	430a      	orrs	r2, r1
 8000450:	601a      	str	r2, [r3, #0]
 8000452:	e0c1      	b.n	80005d8 <GPIO_Init+0x1d8>

	}else{

		//interrupt mode

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	795b      	ldrb	r3, [r3, #5]
 8000458:	2b04      	cmp	r3, #4
 800045a:	d117      	bne.n	800048c <GPIO_Init+0x8c>

			//	1.Configure the FTSR.
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800045c:	4b47      	ldr	r3, [pc, #284]	; (800057c <GPIO_Init+0x17c>)
 800045e:	68db      	ldr	r3, [r3, #12]
 8000460:	687a      	ldr	r2, [r7, #4]
 8000462:	7912      	ldrb	r2, [r2, #4]
 8000464:	4611      	mov	r1, r2
 8000466:	2201      	movs	r2, #1
 8000468:	408a      	lsls	r2, r1
 800046a:	4611      	mov	r1, r2
 800046c:	4a43      	ldr	r2, [pc, #268]	; (800057c <GPIO_Init+0x17c>)
 800046e:	430b      	orrs	r3, r1
 8000470:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit.
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000472:	4b42      	ldr	r3, [pc, #264]	; (800057c <GPIO_Init+0x17c>)
 8000474:	689b      	ldr	r3, [r3, #8]
 8000476:	687a      	ldr	r2, [r7, #4]
 8000478:	7912      	ldrb	r2, [r2, #4]
 800047a:	4611      	mov	r1, r2
 800047c:	2201      	movs	r2, #1
 800047e:	408a      	lsls	r2, r1
 8000480:	43d2      	mvns	r2, r2
 8000482:	4611      	mov	r1, r2
 8000484:	4a3d      	ldr	r2, [pc, #244]	; (800057c <GPIO_Init+0x17c>)
 8000486:	400b      	ands	r3, r1
 8000488:	6093      	str	r3, [r2, #8]
 800048a:	e035      	b.n	80004f8 <GPIO_Init+0xf8>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	795b      	ldrb	r3, [r3, #5]
 8000490:	2b05      	cmp	r3, #5
 8000492:	d117      	bne.n	80004c4 <GPIO_Init+0xc4>

			//	1.Configure the RTSR.
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000494:	4b39      	ldr	r3, [pc, #228]	; (800057c <GPIO_Init+0x17c>)
 8000496:	689b      	ldr	r3, [r3, #8]
 8000498:	687a      	ldr	r2, [r7, #4]
 800049a:	7912      	ldrb	r2, [r2, #4]
 800049c:	4611      	mov	r1, r2
 800049e:	2201      	movs	r2, #1
 80004a0:	408a      	lsls	r2, r1
 80004a2:	4611      	mov	r1, r2
 80004a4:	4a35      	ldr	r2, [pc, #212]	; (800057c <GPIO_Init+0x17c>)
 80004a6:	430b      	orrs	r3, r1
 80004a8:	6093      	str	r3, [r2, #8]
			//Clear the corresponding FTSR bit.
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004aa:	4b34      	ldr	r3, [pc, #208]	; (800057c <GPIO_Init+0x17c>)
 80004ac:	68db      	ldr	r3, [r3, #12]
 80004ae:	687a      	ldr	r2, [r7, #4]
 80004b0:	7912      	ldrb	r2, [r2, #4]
 80004b2:	4611      	mov	r1, r2
 80004b4:	2201      	movs	r2, #1
 80004b6:	408a      	lsls	r2, r1
 80004b8:	43d2      	mvns	r2, r2
 80004ba:	4611      	mov	r1, r2
 80004bc:	4a2f      	ldr	r2, [pc, #188]	; (800057c <GPIO_Init+0x17c>)
 80004be:	400b      	ands	r3, r1
 80004c0:	60d3      	str	r3, [r2, #12]
 80004c2:	e019      	b.n	80004f8 <GPIO_Init+0xf8>

		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	795b      	ldrb	r3, [r3, #5]
 80004c8:	2b06      	cmp	r3, #6
 80004ca:	d115      	bne.n	80004f8 <GPIO_Init+0xf8>

			//	1.Configure the FTSR and RTSR.
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004cc:	4b2b      	ldr	r3, [pc, #172]	; (800057c <GPIO_Init+0x17c>)
 80004ce:	689b      	ldr	r3, [r3, #8]
 80004d0:	687a      	ldr	r2, [r7, #4]
 80004d2:	7912      	ldrb	r2, [r2, #4]
 80004d4:	4611      	mov	r1, r2
 80004d6:	2201      	movs	r2, #1
 80004d8:	408a      	lsls	r2, r1
 80004da:	4611      	mov	r1, r2
 80004dc:	4a27      	ldr	r2, [pc, #156]	; (800057c <GPIO_Init+0x17c>)
 80004de:	430b      	orrs	r3, r1
 80004e0:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e2:	4b26      	ldr	r3, [pc, #152]	; (800057c <GPIO_Init+0x17c>)
 80004e4:	68db      	ldr	r3, [r3, #12]
 80004e6:	687a      	ldr	r2, [r7, #4]
 80004e8:	7912      	ldrb	r2, [r2, #4]
 80004ea:	4611      	mov	r1, r2
 80004ec:	2201      	movs	r2, #1
 80004ee:	408a      	lsls	r2, r1
 80004f0:	4611      	mov	r1, r2
 80004f2:	4a22      	ldr	r2, [pc, #136]	; (800057c <GPIO_Init+0x17c>)
 80004f4:	430b      	orrs	r3, r1
 80004f6:	60d3      	str	r3, [r2, #12]

		}

		//	2.Configure the GPIO port selection in SYSCFG_EXTICR

		uint32_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	791b      	ldrb	r3, [r3, #4]
 80004fc:	089b      	lsrs	r3, r3, #2
 80004fe:	b2db      	uxtb	r3, r3
 8000500:	61bb      	str	r3, [r7, #24]
		uint32_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	791b      	ldrb	r3, [r3, #4]
 8000506:	f003 0303 	and.w	r3, r3, #3
 800050a:	617b      	str	r3, [r7, #20]
		uint32_t portcode =GPIOA_BASEADDR_TO_CODE( pGPIOHandle->pGPIOx);
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	4a1b      	ldr	r2, [pc, #108]	; (8000580 <GPIO_Init+0x180>)
 8000512:	4293      	cmp	r3, r2
 8000514:	d044      	beq.n	80005a0 <GPIO_Init+0x1a0>
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	4a1a      	ldr	r2, [pc, #104]	; (8000584 <GPIO_Init+0x184>)
 800051c:	4293      	cmp	r3, r2
 800051e:	d02b      	beq.n	8000578 <GPIO_Init+0x178>
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	4a18      	ldr	r2, [pc, #96]	; (8000588 <GPIO_Init+0x188>)
 8000526:	4293      	cmp	r3, r2
 8000528:	d024      	beq.n	8000574 <GPIO_Init+0x174>
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	681b      	ldr	r3, [r3, #0]
 800052e:	4a17      	ldr	r2, [pc, #92]	; (800058c <GPIO_Init+0x18c>)
 8000530:	4293      	cmp	r3, r2
 8000532:	d01d      	beq.n	8000570 <GPIO_Init+0x170>
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	4a15      	ldr	r2, [pc, #84]	; (8000590 <GPIO_Init+0x190>)
 800053a:	4293      	cmp	r3, r2
 800053c:	d016      	beq.n	800056c <GPIO_Init+0x16c>
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	4a14      	ldr	r2, [pc, #80]	; (8000594 <GPIO_Init+0x194>)
 8000544:	4293      	cmp	r3, r2
 8000546:	d00f      	beq.n	8000568 <GPIO_Init+0x168>
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	681b      	ldr	r3, [r3, #0]
 800054c:	4a12      	ldr	r2, [pc, #72]	; (8000598 <GPIO_Init+0x198>)
 800054e:	4293      	cmp	r3, r2
 8000550:	d008      	beq.n	8000564 <GPIO_Init+0x164>
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	4a11      	ldr	r2, [pc, #68]	; (800059c <GPIO_Init+0x19c>)
 8000558:	4293      	cmp	r3, r2
 800055a:	d101      	bne.n	8000560 <GPIO_Init+0x160>
 800055c:	2307      	movs	r3, #7
 800055e:	e020      	b.n	80005a2 <GPIO_Init+0x1a2>
 8000560:	2300      	movs	r3, #0
 8000562:	e01e      	b.n	80005a2 <GPIO_Init+0x1a2>
 8000564:	2306      	movs	r3, #6
 8000566:	e01c      	b.n	80005a2 <GPIO_Init+0x1a2>
 8000568:	2305      	movs	r3, #5
 800056a:	e01a      	b.n	80005a2 <GPIO_Init+0x1a2>
 800056c:	2304      	movs	r3, #4
 800056e:	e018      	b.n	80005a2 <GPIO_Init+0x1a2>
 8000570:	2303      	movs	r3, #3
 8000572:	e016      	b.n	80005a2 <GPIO_Init+0x1a2>
 8000574:	2302      	movs	r3, #2
 8000576:	e014      	b.n	80005a2 <GPIO_Init+0x1a2>
 8000578:	2301      	movs	r3, #1
 800057a:	e012      	b.n	80005a2 <GPIO_Init+0x1a2>
 800057c:	40013c00 	.word	0x40013c00
 8000580:	40020000 	.word	0x40020000
 8000584:	40020400 	.word	0x40020400
 8000588:	40020800 	.word	0x40020800
 800058c:	40020c00 	.word	0x40020c00
 8000590:	40021000 	.word	0x40021000
 8000594:	40021400 	.word	0x40021400
 8000598:	40021800 	.word	0x40021800
 800059c:	40021c00 	.word	0x40021c00
 80005a0:	2300      	movs	r3, #0
 80005a2:	613b      	str	r3, [r7, #16]
		SYSCFG_PCLCK_ENABLE();
 80005a4:	4b5d      	ldr	r3, [pc, #372]	; (800071c <GPIO_Init+0x31c>)
 80005a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005a8:	4a5c      	ldr	r2, [pc, #368]	; (800071c <GPIO_Init+0x31c>)
 80005aa:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005ae:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2*4);
 80005b0:	697b      	ldr	r3, [r7, #20]
 80005b2:	009b      	lsls	r3, r3, #2
 80005b4:	495a      	ldr	r1, [pc, #360]	; (8000720 <GPIO_Init+0x320>)
 80005b6:	693a      	ldr	r2, [r7, #16]
 80005b8:	409a      	lsls	r2, r3
 80005ba:	69bb      	ldr	r3, [r7, #24]
 80005bc:	3302      	adds	r3, #2
 80005be:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		// 	3.Enable the EXTI interrupt delivery using IMR.
		EXTI->IMR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c2:	4b58      	ldr	r3, [pc, #352]	; (8000724 <GPIO_Init+0x324>)
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	687a      	ldr	r2, [r7, #4]
 80005c8:	7912      	ldrb	r2, [r2, #4]
 80005ca:	4611      	mov	r1, r2
 80005cc:	2201      	movs	r2, #1
 80005ce:	408a      	lsls	r2, r1
 80005d0:	4611      	mov	r1, r2
 80005d2:	4a54      	ldr	r2, [pc, #336]	; (8000724 <GPIO_Init+0x324>)
 80005d4:	430b      	orrs	r3, r1
 80005d6:	6013      	str	r3, [r2, #0]
	}

	//configure the speed
	temp = 0;
 80005d8:	2300      	movs	r3, #0
 80005da:	61fb      	str	r3, [r7, #28]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	799b      	ldrb	r3, [r3, #6]
 80005e0:	461a      	mov	r2, r3
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	791b      	ldrb	r3, [r3, #4]
 80005e6:	005b      	lsls	r3, r3, #1
 80005e8:	fa02 f303 	lsl.w	r3, r2, r3
 80005ec:	61fb      	str	r3, [r7, #28]

	pGPIOHandle->pGPIOx->OSPEEDER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	689a      	ldr	r2, [r3, #8]
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	791b      	ldrb	r3, [r3, #4]
 80005f8:	4619      	mov	r1, r3
 80005fa:	2303      	movs	r3, #3
 80005fc:	408b      	lsls	r3, r1
 80005fe:	43db      	mvns	r3, r3
 8000600:	4619      	mov	r1, r3
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	400a      	ands	r2, r1
 8000608:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDER |= temp;
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	6899      	ldr	r1, [r3, #8]
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	69fa      	ldr	r2, [r7, #28]
 8000616:	430a      	orrs	r2, r1
 8000618:	609a      	str	r2, [r3, #8]

	//configure pupd settings
	temp = 0;
 800061a:	2300      	movs	r3, #0
 800061c:	61fb      	str	r3, [r7, #28]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl <<(2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	79db      	ldrb	r3, [r3, #7]
 8000622:	461a      	mov	r2, r3
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	791b      	ldrb	r3, [r3, #4]
 8000628:	005b      	lsls	r3, r3, #1
 800062a:	fa02 f303 	lsl.w	r3, r2, r3
 800062e:	61fb      	str	r3, [r7, #28]

	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	68da      	ldr	r2, [r3, #12]
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	791b      	ldrb	r3, [r3, #4]
 800063a:	4619      	mov	r1, r3
 800063c:	2303      	movs	r3, #3
 800063e:	408b      	lsls	r3, r1
 8000640:	43db      	mvns	r3, r3
 8000642:	4619      	mov	r1, r3
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	681b      	ldr	r3, [r3, #0]
 8000648:	400a      	ands	r2, r1
 800064a:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	68d9      	ldr	r1, [r3, #12]
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	69fa      	ldr	r2, [r7, #28]
 8000658:	430a      	orrs	r2, r1
 800065a:	60da      	str	r2, [r3, #12]

	//configure the optype
	temp = 0;
 800065c:	2300      	movs	r3, #0
 800065e:	61fb      	str	r3, [r7, #28]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<( pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	7a1b      	ldrb	r3, [r3, #8]
 8000664:	461a      	mov	r2, r3
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	791b      	ldrb	r3, [r3, #4]
 800066a:	fa02 f303 	lsl.w	r3, r2, r3
 800066e:	61fb      	str	r3, [r7, #28]

	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	685a      	ldr	r2, [r3, #4]
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	791b      	ldrb	r3, [r3, #4]
 800067a:	4619      	mov	r1, r3
 800067c:	2303      	movs	r3, #3
 800067e:	408b      	lsls	r3, r1
 8000680:	43db      	mvns	r3, r3
 8000682:	4619      	mov	r1, r3
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	400a      	ands	r2, r1
 800068a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	6859      	ldr	r1, [r3, #4]
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	69fa      	ldr	r2, [r7, #28]
 8000698:	430a      	orrs	r2, r1
 800069a:	605a      	str	r2, [r3, #4]

	//configure the alternate functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode == GPIO_MODE_ALTEN){
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	7a5b      	ldrb	r3, [r3, #9]
 80006a0:	2b02      	cmp	r3, #2
 80006a2:	d136      	bne.n	8000712 <GPIO_Init+0x312>

		uint32_t temp1=0,temp2=0;
 80006a4:	2300      	movs	r3, #0
 80006a6:	60fb      	str	r3, [r7, #12]
 80006a8:	2300      	movs	r3, #0
 80006aa:	60bb      	str	r3, [r7, #8]

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	791b      	ldrb	r3, [r3, #4]
 80006b0:	08db      	lsrs	r3, r3, #3
 80006b2:	b2db      	uxtb	r3, r3
 80006b4:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	791b      	ldrb	r3, [r3, #4]
 80006ba:	f003 0307 	and.w	r3, r3, #7
 80006be:	60bb      	str	r3, [r7, #8]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF <<(4*temp2));
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	68fa      	ldr	r2, [r7, #12]
 80006c6:	3208      	adds	r2, #8
 80006c8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80006cc:	68bb      	ldr	r3, [r7, #8]
 80006ce:	009b      	lsls	r3, r3, #2
 80006d0:	210f      	movs	r1, #15
 80006d2:	fa01 f303 	lsl.w	r3, r1, r3
 80006d6:	43db      	mvns	r3, r3
 80006d8:	4619      	mov	r1, r3
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	4011      	ands	r1, r2
 80006e0:	68fa      	ldr	r2, [r7, #12]
 80006e2:	3208      	adds	r2, #8
 80006e4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<(4*temp2);
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	68fa      	ldr	r2, [r7, #12]
 80006ee:	3208      	adds	r2, #8
 80006f0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	7a5b      	ldrb	r3, [r3, #9]
 80006f8:	4619      	mov	r1, r3
 80006fa:	68bb      	ldr	r3, [r7, #8]
 80006fc:	009b      	lsls	r3, r3, #2
 80006fe:	fa01 f303 	lsl.w	r3, r1, r3
 8000702:	4619      	mov	r1, r3
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	4311      	orrs	r1, r2
 800070a:	68fa      	ldr	r2, [r7, #12]
 800070c:	3208      	adds	r2, #8
 800070e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8000712:	bf00      	nop
 8000714:	3724      	adds	r7, #36	; 0x24
 8000716:	46bd      	mov	sp, r7
 8000718:	bc80      	pop	{r7}
 800071a:	4770      	bx	lr
 800071c:	40023800 	.word	0x40023800
 8000720:	40013800 	.word	0x40013800
 8000724:	40013c00 	.word	0x40013c00

08000728 <GPIO_ToggleOutputPin>:
 *
 * @Note		-

 ************************************************************/

void GPIO_ToggleOutputPin(GPIO_RegDef_t* pGPIOx,uint8_t PinNumber){
 8000728:	b480      	push	{r7}
 800072a:	b083      	sub	sp, #12
 800072c:	af00      	add	r7, sp, #0
 800072e:	6078      	str	r0, [r7, #4]
 8000730:	460b      	mov	r3, r1
 8000732:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR ^= (1 << PinNumber);
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	695b      	ldr	r3, [r3, #20]
 8000738:	78fa      	ldrb	r2, [r7, #3]
 800073a:	2101      	movs	r1, #1
 800073c:	fa01 f202 	lsl.w	r2, r1, r2
 8000740:	405a      	eors	r2, r3
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	615a      	str	r2, [r3, #20]
}
 8000746:	bf00      	nop
 8000748:	370c      	adds	r7, #12
 800074a:	46bd      	mov	sp, r7
 800074c:	bc80      	pop	{r7}
 800074e:	4770      	bx	lr

08000750 <GPIO_IRQInterruptConfig>:
 *
 * @Note		-

 ************************************************************/

void GPIO_IRQInterruptConfig(uint8_t IRQNumber,uint8_t Enable){
 8000750:	b480      	push	{r7}
 8000752:	b083      	sub	sp, #12
 8000754:	af00      	add	r7, sp, #0
 8000756:	4603      	mov	r3, r0
 8000758:	460a      	mov	r2, r1
 800075a:	71fb      	strb	r3, [r7, #7]
 800075c:	4613      	mov	r3, r2
 800075e:	71bb      	strb	r3, [r7, #6]

	if(Enable == ENABLE){
 8000760:	79bb      	ldrb	r3, [r7, #6]
 8000762:	2b01      	cmp	r3, #1
 8000764:	d133      	bne.n	80007ce <GPIO_IRQInterruptConfig+0x7e>

		if(IRQNumber <= 31){
 8000766:	79fb      	ldrb	r3, [r7, #7]
 8000768:	2b1f      	cmp	r3, #31
 800076a:	d80a      	bhi.n	8000782 <GPIO_IRQInterruptConfig+0x32>

			//Program ISER0 register
			*NVIC_ISER0 |= (1 << IRQNumber);
 800076c:	4b34      	ldr	r3, [pc, #208]	; (8000840 <GPIO_IRQInterruptConfig+0xf0>)
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	79fa      	ldrb	r2, [r7, #7]
 8000772:	2101      	movs	r1, #1
 8000774:	fa01 f202 	lsl.w	r2, r1, r2
 8000778:	4611      	mov	r1, r2
 800077a:	4a31      	ldr	r2, [pc, #196]	; (8000840 <GPIO_IRQInterruptConfig+0xf0>)
 800077c:	430b      	orrs	r3, r1
 800077e:	6013      	str	r3, [r2, #0]

			//Program ICER2 register  64 to 96
			*NVIC_ICER1 |= (1 << IRQNumber % 64);
		}
	}
}
 8000780:	e059      	b.n	8000836 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64){
 8000782:	79fb      	ldrb	r3, [r7, #7]
 8000784:	2b1f      	cmp	r3, #31
 8000786:	d90f      	bls.n	80007a8 <GPIO_IRQInterruptConfig+0x58>
 8000788:	79fb      	ldrb	r3, [r7, #7]
 800078a:	2b3f      	cmp	r3, #63	; 0x3f
 800078c:	d80c      	bhi.n	80007a8 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << IRQNumber % 32);
 800078e:	4b2d      	ldr	r3, [pc, #180]	; (8000844 <GPIO_IRQInterruptConfig+0xf4>)
 8000790:	681b      	ldr	r3, [r3, #0]
 8000792:	79fa      	ldrb	r2, [r7, #7]
 8000794:	f002 021f 	and.w	r2, r2, #31
 8000798:	2101      	movs	r1, #1
 800079a:	fa01 f202 	lsl.w	r2, r1, r2
 800079e:	4611      	mov	r1, r2
 80007a0:	4a28      	ldr	r2, [pc, #160]	; (8000844 <GPIO_IRQInterruptConfig+0xf4>)
 80007a2:	430b      	orrs	r3, r1
 80007a4:	6013      	str	r3, [r2, #0]
 80007a6:	e046      	b.n	8000836 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96){
 80007a8:	79fb      	ldrb	r3, [r7, #7]
 80007aa:	2b3f      	cmp	r3, #63	; 0x3f
 80007ac:	d943      	bls.n	8000836 <GPIO_IRQInterruptConfig+0xe6>
 80007ae:	79fb      	ldrb	r3, [r7, #7]
 80007b0:	2b5f      	cmp	r3, #95	; 0x5f
 80007b2:	d840      	bhi.n	8000836 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << IRQNumber % 64);
 80007b4:	4b24      	ldr	r3, [pc, #144]	; (8000848 <GPIO_IRQInterruptConfig+0xf8>)
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	79fa      	ldrb	r2, [r7, #7]
 80007ba:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80007be:	2101      	movs	r1, #1
 80007c0:	fa01 f202 	lsl.w	r2, r1, r2
 80007c4:	4611      	mov	r1, r2
 80007c6:	4a20      	ldr	r2, [pc, #128]	; (8000848 <GPIO_IRQInterruptConfig+0xf8>)
 80007c8:	430b      	orrs	r3, r1
 80007ca:	6013      	str	r3, [r2, #0]
}
 80007cc:	e033      	b.n	8000836 <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31){
 80007ce:	79fb      	ldrb	r3, [r7, #7]
 80007d0:	2b1f      	cmp	r3, #31
 80007d2:	d80a      	bhi.n	80007ea <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 80007d4:	4b1d      	ldr	r3, [pc, #116]	; (800084c <GPIO_IRQInterruptConfig+0xfc>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	79fa      	ldrb	r2, [r7, #7]
 80007da:	2101      	movs	r1, #1
 80007dc:	fa01 f202 	lsl.w	r2, r1, r2
 80007e0:	4611      	mov	r1, r2
 80007e2:	4a1a      	ldr	r2, [pc, #104]	; (800084c <GPIO_IRQInterruptConfig+0xfc>)
 80007e4:	430b      	orrs	r3, r1
 80007e6:	6013      	str	r3, [r2, #0]
}
 80007e8:	e025      	b.n	8000836 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64){
 80007ea:	79fb      	ldrb	r3, [r7, #7]
 80007ec:	2b1f      	cmp	r3, #31
 80007ee:	d90f      	bls.n	8000810 <GPIO_IRQInterruptConfig+0xc0>
 80007f0:	79fb      	ldrb	r3, [r7, #7]
 80007f2:	2b3f      	cmp	r3, #63	; 0x3f
 80007f4:	d80c      	bhi.n	8000810 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << IRQNumber % 32);
 80007f6:	4b16      	ldr	r3, [pc, #88]	; (8000850 <GPIO_IRQInterruptConfig+0x100>)
 80007f8:	681b      	ldr	r3, [r3, #0]
 80007fa:	79fa      	ldrb	r2, [r7, #7]
 80007fc:	f002 021f 	and.w	r2, r2, #31
 8000800:	2101      	movs	r1, #1
 8000802:	fa01 f202 	lsl.w	r2, r1, r2
 8000806:	4611      	mov	r1, r2
 8000808:	4a11      	ldr	r2, [pc, #68]	; (8000850 <GPIO_IRQInterruptConfig+0x100>)
 800080a:	430b      	orrs	r3, r1
 800080c:	6013      	str	r3, [r2, #0]
 800080e:	e012      	b.n	8000836 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96){
 8000810:	79fb      	ldrb	r3, [r7, #7]
 8000812:	2b3f      	cmp	r3, #63	; 0x3f
 8000814:	d90f      	bls.n	8000836 <GPIO_IRQInterruptConfig+0xe6>
 8000816:	79fb      	ldrb	r3, [r7, #7]
 8000818:	2b5f      	cmp	r3, #95	; 0x5f
 800081a:	d80c      	bhi.n	8000836 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER1 |= (1 << IRQNumber % 64);
 800081c:	4b0c      	ldr	r3, [pc, #48]	; (8000850 <GPIO_IRQInterruptConfig+0x100>)
 800081e:	681b      	ldr	r3, [r3, #0]
 8000820:	79fa      	ldrb	r2, [r7, #7]
 8000822:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000826:	2101      	movs	r1, #1
 8000828:	fa01 f202 	lsl.w	r2, r1, r2
 800082c:	4611      	mov	r1, r2
 800082e:	4a08      	ldr	r2, [pc, #32]	; (8000850 <GPIO_IRQInterruptConfig+0x100>)
 8000830:	430b      	orrs	r3, r1
 8000832:	6013      	str	r3, [r2, #0]
}
 8000834:	e7ff      	b.n	8000836 <GPIO_IRQInterruptConfig+0xe6>
 8000836:	bf00      	nop
 8000838:	370c      	adds	r7, #12
 800083a:	46bd      	mov	sp, r7
 800083c:	bc80      	pop	{r7}
 800083e:	4770      	bx	lr
 8000840:	e000e100 	.word	0xe000e100
 8000844:	e000e104 	.word	0xe000e104
 8000848:	e000e108 	.word	0xe000e108
 800084c:	e000e180 	.word	0xe000e180
 8000850:	e000e184 	.word	0xe000e184

08000854 <GPIO_IRQPriorityConfig>:
 * @Note		-

 *
 */

void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint32_t IRQPriority){
 8000854:	b480      	push	{r7}
 8000856:	b085      	sub	sp, #20
 8000858:	af00      	add	r7, sp, #0
 800085a:	4603      	mov	r3, r0
 800085c:	6039      	str	r1, [r7, #0]
 800085e:	71fb      	strb	r3, [r7, #7]

	//	1.First lets find out the ipr register
	uint8_t iprx =IRQNumber/4;
 8000860:	79fb      	ldrb	r3, [r7, #7]
 8000862:	089b      	lsrs	r3, r3, #2
 8000864:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section =IRQNumber%4;
 8000866:	79fb      	ldrb	r3, [r7, #7]
 8000868:	f003 0303 	and.w	r3, r3, #3
 800086c:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8*iprx_section)+(8 - NO_PR_BITS_IMPLEMENTED);
 800086e:	7bbb      	ldrb	r3, [r7, #14]
 8000870:	00db      	lsls	r3, r3, #3
 8000872:	b2db      	uxtb	r3, r3
 8000874:	3304      	adds	r3, #4
 8000876:	737b      	strb	r3, [r7, #13]

	*(NVIC_PR_BASE_ADDR  +  iprx ) |= ( IRQPriority << shift_amount );
 8000878:	7bfb      	ldrb	r3, [r7, #15]
 800087a:	009b      	lsls	r3, r3, #2
 800087c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000880:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000884:	6819      	ldr	r1, [r3, #0]
 8000886:	7b7b      	ldrb	r3, [r7, #13]
 8000888:	683a      	ldr	r2, [r7, #0]
 800088a:	409a      	lsls	r2, r3
 800088c:	7bfb      	ldrb	r3, [r7, #15]
 800088e:	009b      	lsls	r3, r3, #2
 8000890:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000894:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000898:	430a      	orrs	r2, r1
 800089a:	601a      	str	r2, [r3, #0]
}
 800089c:	bf00      	nop
 800089e:	3714      	adds	r7, #20
 80008a0:	46bd      	mov	sp, r7
 80008a2:	bc80      	pop	{r7}
 80008a4:	4770      	bx	lr
	...

080008a8 <GPIO_IRQHandling>:
 * @return		-
 *
 * @Note		-

 ************************************************************/
void GPIO_IRQHandling(uint8_t PinNumber){
 80008a8:	b480      	push	{r7}
 80008aa:	b083      	sub	sp, #12
 80008ac:	af00      	add	r7, sp, #0
 80008ae:	4603      	mov	r3, r0
 80008b0:	71fb      	strb	r3, [r7, #7]

	//Clear the EXTI PR register corresponding to the pin number

	if(EXTI->PR & (1 <<PinNumber))
 80008b2:	4b0c      	ldr	r3, [pc, #48]	; (80008e4 <GPIO_IRQHandling+0x3c>)
 80008b4:	695b      	ldr	r3, [r3, #20]
 80008b6:	79fa      	ldrb	r2, [r7, #7]
 80008b8:	2101      	movs	r1, #1
 80008ba:	fa01 f202 	lsl.w	r2, r1, r2
 80008be:	4013      	ands	r3, r2
 80008c0:	2b00      	cmp	r3, #0
 80008c2:	d009      	beq.n	80008d8 <GPIO_IRQHandling+0x30>
		EXTI->PR |= ( 1 <<PinNumber );	// Clear
 80008c4:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <GPIO_IRQHandling+0x3c>)
 80008c6:	695b      	ldr	r3, [r3, #20]
 80008c8:	79fa      	ldrb	r2, [r7, #7]
 80008ca:	2101      	movs	r1, #1
 80008cc:	fa01 f202 	lsl.w	r2, r1, r2
 80008d0:	4611      	mov	r1, r2
 80008d2:	4a04      	ldr	r2, [pc, #16]	; (80008e4 <GPIO_IRQHandling+0x3c>)
 80008d4:	430b      	orrs	r3, r1
 80008d6:	6153      	str	r3, [r2, #20]

}
 80008d8:	bf00      	nop
 80008da:	370c      	adds	r7, #12
 80008dc:	46bd      	mov	sp, r7
 80008de:	bc80      	pop	{r7}
 80008e0:	4770      	bx	lr
 80008e2:	bf00      	nop
 80008e4:	40013c00 	.word	0x40013c00

080008e8 <__libc_init_array>:
 80008e8:	b570      	push	{r4, r5, r6, lr}
 80008ea:	4e0d      	ldr	r6, [pc, #52]	; (8000920 <__libc_init_array+0x38>)
 80008ec:	4c0d      	ldr	r4, [pc, #52]	; (8000924 <__libc_init_array+0x3c>)
 80008ee:	1ba4      	subs	r4, r4, r6
 80008f0:	10a4      	asrs	r4, r4, #2
 80008f2:	2500      	movs	r5, #0
 80008f4:	42a5      	cmp	r5, r4
 80008f6:	d109      	bne.n	800090c <__libc_init_array+0x24>
 80008f8:	4e0b      	ldr	r6, [pc, #44]	; (8000928 <__libc_init_array+0x40>)
 80008fa:	4c0c      	ldr	r4, [pc, #48]	; (800092c <__libc_init_array+0x44>)
 80008fc:	f000 f820 	bl	8000940 <_init>
 8000900:	1ba4      	subs	r4, r4, r6
 8000902:	10a4      	asrs	r4, r4, #2
 8000904:	2500      	movs	r5, #0
 8000906:	42a5      	cmp	r5, r4
 8000908:	d105      	bne.n	8000916 <__libc_init_array+0x2e>
 800090a:	bd70      	pop	{r4, r5, r6, pc}
 800090c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000910:	4798      	blx	r3
 8000912:	3501      	adds	r5, #1
 8000914:	e7ee      	b.n	80008f4 <__libc_init_array+0xc>
 8000916:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800091a:	4798      	blx	r3
 800091c:	3501      	adds	r5, #1
 800091e:	e7f2      	b.n	8000906 <__libc_init_array+0x1e>
 8000920:	08000958 	.word	0x08000958
 8000924:	08000958 	.word	0x08000958
 8000928:	08000958 	.word	0x08000958
 800092c:	0800095c 	.word	0x0800095c

08000930 <memset>:
 8000930:	4402      	add	r2, r0
 8000932:	4603      	mov	r3, r0
 8000934:	4293      	cmp	r3, r2
 8000936:	d100      	bne.n	800093a <memset+0xa>
 8000938:	4770      	bx	lr
 800093a:	f803 1b01 	strb.w	r1, [r3], #1
 800093e:	e7f9      	b.n	8000934 <memset+0x4>

08000940 <_init>:
 8000940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000942:	bf00      	nop
 8000944:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000946:	bc08      	pop	{r3}
 8000948:	469e      	mov	lr, r3
 800094a:	4770      	bx	lr

0800094c <_fini>:
 800094c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800094e:	bf00      	nop
 8000950:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000952:	bc08      	pop	{r3}
 8000954:	469e      	mov	lr, r3
 8000956:	4770      	bx	lr
